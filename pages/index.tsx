import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import ElevatorHistory from "../components/ElevatorHistory";

const Home: NextPage = () => {
  const [currentFloor, setCurrentFloor] = useState(1);
  const [isMoving, setIsMoving] = useState(false);
  const [doors, setDoors] = useState("closed");
  const [events, setEvents] = useState<Array<string>>([]);
  const [todo, setTodo] = useState<Array<string>>([]);

  const getNextTodo = () => {
    let nextTodo;

    if (todo.length > 0) {
        nextTodo = todo.shift();
        console.log('todo', todo);
        setTodo([...todo]);

        // Do something with the todo
    } else {
        console.log('current floor', currentFloor)
        // Go to floor 1 and open doors
        if (currentFloor > 1) {
            decreaseFloor();
        }

        if (currentFloor === 1 && doors === "closed") {
            openDoors();
        }
    }
  }

  const decreaseFloor = () => {
    if (currentFloor > 1) {
        setCurrentFloor(currentFloor - 1);
        console.log('new floor is ', currentFloor);
        updateEventsList(`Moved to floor ${currentFloor}`);
    } else {
        console.warn('cant go down anymore!');
    }
  }

  const increaseFloor = () => {
    if (currentFloor > 20) {
        console.warn('cant go up anymore!');
    } else {
        setCurrentFloor(currentFloor + 1);
        console.log('new floor is ', currentFloor);
        updateEventsList(`Moved to floor ${currentFloor}`);
    }
  }

  const openDoors = () => {
    setDoors("open");
    updateEventsList('Opened doors');
  }

  const closeDoors = () => {
    setDoors("close");
    updateEventsList('Closed doors');
  }

//   const requestElevator = (floor: number): void => {
//     if (floor === currentFloor) {
//         receiveTenant();
//     } else if (floor > currentFloor) {
//         // Go Up
//     } else {
//         // Go Down
//     }
//   }

//   const receiveTenant = (): void => {
//     if (doors === 'closed') {
//         setDoors('open');
//         updateEventsList('Doors opened');
//     } else {
//         // Do Work
//     }
//   }

  const updateEventsList = (newEvent: string): void => {
    // if (events.length >= 20) {
    //     setEvents([...events.slice(1),newEvent])
    // }
    setEvents([...events, newEvent]);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.layoutContainer}>
        <div className={styles.leftColumn}>
          <div className={styles.card}>
            <h1>Elevator</h1>
            <div>
                Floor {currentFloor}
            </div>
            <div>
                {isMoving?'Is moving' : 'Is not moving'}
            </div>
            <div>
                Doors are {doors}
            </div>
          </div>
        </div>
        <div className={styles.rightColumn}>
          <ElevatorHistory history={events} />
        </div>
      </div>
    </div>
  );
};

export default Home;
