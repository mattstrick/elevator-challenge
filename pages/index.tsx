import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import ElevatorHistory from "../components/ElevatorHistory";
import { useReducer } from "react";
import { elevatorReducer } from "../reducers/ElevatorReducer";
import ElevatorDisplay from "../components/ElevatorDisplay";

const Home: NextPage = () => {
  const initialTasks = { doors: "closed", isMoving: false, currentFloor: 0, events: [] };
  
  const [todo, setTodo] = useState<Array<string>>([]);
  const [elevator, dispatch] = useReducer(elevatorReducer, initialTasks);

  const getNextTodo = () => {
    let nextTodo;

    if (todo.length > 0) {
      nextTodo = todo.shift();
      setTodo([...todo]);

      // Do something with the todo
    } else {
      // Go to floor 1 and open doors
      if (elevator.currentFloor > 1) {
        decreaseFloor();
      }

      if (elevator.currentFloor === 1 && elevator.doors === "closed") {
        openDoors();
      }
    }
  };

  const decreaseFloor = () => {
    dispatch({
      type: "decrease floor",
      floor: elevator.currentFloor,
    });

    // if (currentFloor > 1) {
    //     setCurrentFloor(currentFloor - 1);
    // } else {
    //     console.warn('cant go down anymore!');
    // }
  };

  const increaseFloor = () => {
    dispatch({
      type: "increase floor",
      floor: elevator.currentFloor,
    });

    // if (currentFloor === 20) {
    //     console.warn('cant go up anymore!');
    // } else {
    //     setCurrentFloor(currentFloor + 1);
    //     console.log('new floor is ', currentFloor);
    // }
  };

  const openDoors = () => {
    dispatch({
      type: "open doors",
    });
  };

  const closeDoors = () => {
    dispatch({
      type: "close doors",
    });
  };

  //   const requestElevator = (floor: number): void => {
  //     if (floor === currentFloor) {
  //         receiveTenant();
  //     } else if (floor > currentFloor) {
  //         // Go Up
  //     } else {
  //         // Go Down
  //     }
  //   }

  //   const receiveTenant = (): void => {
  //     if (doors === 'closed') {
  //         setDoors('open');
  //     } else {
  //         // Do Work
  //     }
  //   }

  const handleOpenDoors = () => {
    openDoors();
  };

  const handleCloseDoors = () => {
    closeDoors();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <h1>Controls</h1>
        <div>
          <input type="button" value={"Open Doors"} onClick={handleOpenDoors} />
          <input
            type="button"
            value={"Close Doors"}
            onClick={handleCloseDoors}
          />
          
        </div>
      </div>
      <div className={styles.layoutContainer}>
        <div className={styles.leftColumn}>
          <ElevatorDisplay elevator={elevator} />
        </div>
        <div className={styles.rightColumn}>
          <ElevatorHistory history={elevator.events} />
        </div>
      </div>
    </div>
  );
};

export default Home;
